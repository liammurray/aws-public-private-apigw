openapi: "3.0.1"
info:
  title: "orders-api"
  description: "A simple ordering API supporting create, list and get\n"
  version: "2019-11-04-1572893759"
servers:
- url: "https://api-dev.nod15c.com{basePath}"
  variables:
    basePath:
      default: "/orders"
paths:
  /{orderId}:
    get:
      summary: "Get order detail\n"
      description: "Provides detailed information about the order, including status.\n"
      operationId: "getOrderById"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Order ID"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not found"
          content: {}
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderResponse"
      security:
      - CognitoAuth:
        - "orders/ro"
        - "orders/rw"
    delete:
      operationId: "deleteOrderById"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "404 response"
          content: {}
        200:
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteOrderResponse"
      security:
      - CognitoAuth:
        - "orders/rw"
  /:
    get:
      summary: "Lists orders"
      description: "Lists multiple orders (by submission date) with pagination\n"
      operationId: "listOrders"
      parameters:
      - name: "offset"
        in: "query"
        description: "First item to return"
        schema:
          type: "string"
      - name: "status"
        in: "query"
        description: "Order status filter"
        schema:
          type: "string"
      - name: "limit"
        in: "query"
        description: "Max items to return (max 50)"
        schema:
          type: "string"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrdersResponse"
      security:
      - CognitoAuth:
        - "orders/ro"
        - "orders/rw"
    post:
      summary: "Submits an order"
      description: "Submits an order to be placed with the program partner\n"
      operationId: "submitOrder"
      requestBody:
        description: "Order submission information"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
        required: true
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceOrderResponse"
        400:
          description: "Bad request"
          content: {}
      security:
      - CognitoAuth:
        - "orders/rw"
components:
  schemas:
    GetOrderResponse:
      required:
      - "order"
      type: "object"
      properties:
        order:
          $ref: "#/components/schemas/OrderDetail"
      description: "Response containing detail for a single order"
    OrderDetail:
      required:
      - "createdAt"
      - "itemId"
      - "orderId"
      - "status"
      type: "object"
      properties:
        itemId:
          type: "string"
          description: "item that was ordered"
        createdAt:
          type: "string"
          description: "order creation date"
          format: "date-time"
        orderId:
          type: "string"
          description: "unique identifier for order"
        status:
          $ref: "#/components/schemas/OrderStatus"
      description: "Detailed information for order"
    OrderStatus:
      type: "string"
      description: "Indicates order state"
      enum:
      - "submitted"
      - "ordered"
      - "failed"
      - "canceled"
    OrderRequest:
      required:
      - "data"
      - "itemId"
      type: "object"
      properties:
        itemId:
          type: "string"
          description: "What is being ordered"
        data:
          type: "object"
          description: "Opaque data associated with the order"
      description: "Order submission information"
    OrderSummary:
      required:
      - "itemId"
      - "orderId"
      - "status"
      type: "object"
      properties:
        itemId:
          type: "string"
          description: "item id"
        orderId:
          type: "string"
          description: "order id"
        placerId:
          type: "string"
          description: "placer id (client_id)"
        status:
          $ref: "#/components/schemas/OrderStatus"
      description: "Short order summary"
    DeleteOrderResponse:
      required:
      - "order"
      type: "object"
      properties:
        order:
          $ref: "#/components/schemas/OrderDetail"
      description: "Response containing detail for a single order that was canceled"
    PlaceOrderResponse:
      required:
      - "order"
      type: "object"
      properties:
        order:
          $ref: "#/components/schemas/OrderSummary"
      description: "Response containing summary for a single order"
    ListOrdersResponse:
      required:
      - "orders"
      type: "object"
      properties:
        orders:
          type: "array"
          description: "List of orders"
          items:
            $ref: "#/components/schemas/OrderSummary"
        totalCount:
          type: "integer"
          description: "Total number of items irrespective of pagination"
          format: "int32"
      description: "Response containing list of order summary items"
  securitySchemes:
    CognitoAuth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
